{"version":3,"sources":["Todo.js","NewTodoForm.js","TodoList.js","App.js","index.js"],"names":["Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isEditing","text","date","handleToggle","bind","assertThisInitialized","handleDelete","handleEdit","handleChangeText","handleChangeDate","handleSubmit","isDateOverdue","e","preventDefault","toggleTodo","id","removeTodo","setState","objectSpread","target","value","updateTodo","Date","toLocaleDateString","output","react_default","a","createElement","Fragment","className","onSubmit","name","type","onChange","complete","onClick","formateDate","class","buildClassName","Component","NewTodoForm","addTodo","uuid","required","TodoList","storedTodos","localStorage","getItem","JSON","parse","todos","todo","newTodo","concat","toConsumableArray","newTodos","map","filter","_this2","setItem","stringify","src_Todo_0","key","src_NewTodoForm_0","App","src_TodoList_0","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.956c610c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Todo.css';\n\nclass Todo extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      isEditing: false,\n      text: props.text,\n      date: props.date\n    }\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleChangeText = this.handleChangeText.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.isDateOverdue = this.isDateOverdue.bind(this);\n  }\n\n  handleToggle(e) {\n    e.preventDefault();\n    this.props.toggleTodo(this.props.id);\n  }\n\n  handleDelete(e) {\n    e.preventDefault();\n    this.props.removeTodo(this.props.id);\n  }\n\n  handleEdit(e) {\n    e.preventDefault();\n    this.setState({isEditing: true});\n  }\n\n  handleChangeText(e) {\n    this.setState({\n      ...this.state,\n      text: e.target.value\n    })\n  }\n\n  handleChangeDate(e) {\n    this.setState({\n      ...this.state,\n      date: e.target.value\n    })\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.updateTodo(this.props.id, this.state.text, this.state.date);\n    this.setState({\n      ...this.state,\n      isEditing: false\n    });\n  }\n\n  formateDate(date) {\n    let formatedDate = new Date(date);\n    return formatedDate.toLocaleDateString();\n  }\n\n  isDateOverdue() {\n    return new Date(this.props.date) < new Date();\n  }\n\n  render() {\n    let output;\n    if(this.state.isEditing) {\n      output = (\n        <>\n          <form className=\"Todo-Editing\" onSubmit={this.handleSubmit}>\n            <input \n              name=\"text\" \n              type=\"text\" \n              value={this.state.text}\n              onChange={this.handleChangeText}\n            />\n            <input \n              name=\"date\"\n              type=\"date\"\n              value={this.state.date}\n              onChange={this.handleChangeDate}\n            />\n            <input type=\"submit\" value=\"save\" />\n          </form>\n        </>\n        );\n    } else {\n      output = (\n        <>\n          <p\n            className={this.props.complete ? \"Todo-Complete\" : \"\"}\n            onClick={this.handleToggle}\n          >\n            {this.props.text} - {this.formateDate(this.props.date)}\n          </p>\n          <div>\n            <i class=\"fas fa-edit\" onClick={this.handleEdit}></i>\n            <i class=\"fas fa-trash-alt\" onClick={this.handleDelete}></i>\n          </div>\n        </>\n      );\n    };\n\n    const buildClassName = \"Todo\" + \n      (this.isDateOverdue() && !this.props.complete ? \" Todo-Overdue\" : \"\");\n\n    return (\n      <li className={buildClassName}>\n        {output}\n      </li>\n    );\n  }\n}\n\nexport default Todo;\n","import React, { Component } from 'react';\nimport './NewTodoForm.css';\nimport uuid from \"uuid/v4\";\n\nclass NewTodoForm extends Component {\n  constructor() {\n    super();\n    this.state = { \n        text: \"\",\n        date: \"\"\n      };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChangeText = this.handleChangeText.bind(this);\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n  }\n\n  handleChangeText(e) {\n    this.setState({\n      ...this.state,\n      text: e.target.value\n    });\n  }\n\n  handleChangeDate(e) {\n    this.setState({\n      ...this.state,\n      date: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.addTodo({...this.state, id: uuid() });\n    this.setState({\n      text: \"\",\n      date: \"\"\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"NewTodoForm\">\n        <h2>New Todo</h2>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"text\"\n            value={this.state.text}\n            onChange={this.handleChangeText}\n            required\n          />\n          <input \n            type=\"date\"\n            name=\"date\"\n            value={this.state.date}\n            onChange={this.handleChangeDate}\n            required\n          />\n          <input type=\"submit\" value=\"Add Todo\" />\n        </form>\n      </div>\n      \n    );\n  }\n\n}\n\nexport default NewTodoForm;\n","import React, { Component } from 'react';\nimport './TodoList.css';\nimport Todo from './Todo';\nimport NewTodoForm from './NewTodoForm';\n\nclass TodoList extends Component {\n  constructor() {\n    super();\n    const storedTodos = localStorage.getItem(\"todo-list\");\n    if(storedTodos) {\n      this.state = {\n        ...JSON.parse(storedTodos)\n      }\n    } else {\n      this.state = {\n        todos: []\n      }\n    }\n    this.addTodo = this.addTodo.bind(this);\n    this.toggleTodo = this.toggleTodo.bind(this);\n    this.removeTodo = this.removeTodo.bind(this);\n    this.updateTodo = this.updateTodo.bind(this);\n  }\n\n  addTodo(todo) {\n    const newTodo = {\n      ...todo,\n      complete: false\n    };\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    });\n  }\n\n  toggleTodo(id) {\n    const newTodos = this.state.todos.map(todo => {\n      if(todo.id === id) {\n        return {\n          ...todo,\n          complete: !todo.complete\n        }\n      }\n      return todo;\n    })\n    this.setState({todos: newTodos});\n  }\n\n  removeTodo(id) {\n    this.setState({\n      todos: this.state.todos.filter(todo => todo.id !== id)\n    })\n  }\n\n  updateTodo(id, text, date) {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if(todo.id === id) {\n          return {\n            ...todo,\n            text: text ? text : todo.text,\n            date: date ? date : todo.date\n          }\n        }\n        return todo;\n      })\n    });\n  }\n\n  render() {\n    localStorage.setItem(\"todo-list\", JSON.stringify(this.state));\n\n    const todos = this.state.todos.map((todo) => (\n      <Todo\n        key={todo.id}\n        id={todo.id}\n        text={todo.text}\n        date={todo.date}\n        complete={todo.complete}\n        toggleTodo={this.toggleTodo}\n        removeTodo={this.removeTodo}\n        updateTodo={this.updateTodo}\n      />\n    ));\n\n    return (\n      <div className=\"TodoList\">\n        <h1>Todo List!</h1>\n        <p>A simple React Todo List App</p>\n        <ul>{ todos }</ul>\n        <NewTodoForm addTodo={this.addTodo}/>\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport TodoList from './TodoList';\n\nfunction App() {\n  return (\n    <TodoList />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}